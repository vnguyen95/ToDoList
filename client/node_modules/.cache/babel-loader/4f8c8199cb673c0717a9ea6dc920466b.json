{"ast":null,"code":"var _jsxFileName = \"/home/vnguyen95/ToDoList/client/src/ListEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport Header from './Header';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListEdit(props) {\n  _s();\n\n  console.log(props);\n  const listId = props.match.params.listId;\n  const [list, setList] = useState();\n  const [tasks, setTasks] = useState([]);\n  const DisplayContainer = styled.div`\n        width: 50%;\n    `;\n  const FormContainer = styled.div`\n        width: 50%;\n    `;\n\n  const fetchList = async () => {\n    const {\n      data: list\n    } = await axios.get(`/api/todolist/${listId}`);\n    setList(list);\n    console.log(list);\n  };\n\n  const handleAddTasks = async e => {\n    e.preventDefault();\n    console.log(e);\n    const newTask = e.target.task.value;\n    setTasks(...tasks, newTask);\n    console.log(tasks);\n  };\n\n  const handleUpdate = async e => {\n    e.preventDefault();\n    console.log(e.target);\n    const updatedList = {\n      title: e.target.title.value,\n      author: e.target.author.value,\n      date: e.target.date.value,\n      tasks: [e.target.task.value],\n      count: tasks.length\n    };\n    console.log(updatedList);\n    await axios.patch(`/api/todolist/${listId}`, updatedList);\n  };\n\n  useEffect(() => {\n    fetchList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), list && list.author && list.title && list.date && list.tasks && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center text-center mt-3 mb-5\",\n        children: /*#__PURE__*/_jsxDEV(DisplayContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Old version: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [list.author, \"'s \", list.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), list.date, list.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-1\",\n            children: task\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center text-center\",\n        children: /*#__PURE__*/_jsxDEV(FormContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleUpdate,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"title\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"List title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: list.title,\n                name: \"title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: list.author,\n                name: \"author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"date\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: list.date,\n                name: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Task:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: list.tasks,\n                name: \"task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"mt-3\",\n              variant: \"warning\",\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListEdit, \"/naHuE7CG2AEsAeOdf9cuKtYHXg=\");\n\n_c = ListEdit;\nexport default ListEdit; // return (\n//     <div className=\"pt-2 align-text-center\">\n//         {/* <form>\n//                 {tasks.map((task, index) =>\n//                     <div>\n//                         <input type=\"checkbox\" id=\"task\" name=\"task\" value=\"task\" className=\"task\" key={index}></input>\n//                         <label for=\"task\" className=\"m-1 task\" key={index}>{task.time} —— {task.task}</label>\n//                     </div>\n//                 )}\n//                 <Button variant=\"warning\" type=\"submit\" className=\"m-2\" onDelete={deleteTasks}>Completed!</Button>\n//             </form> */}\n//         {list.list.author}'s {list.list.title} - {list.list.date}\n//         {list.list.tasks.map((task, index) =>\n//             <TaskBox key={index} className=\"m-1\" onClick={() => handleDelete(task._id)}\n//                 onMouseEnter={() => setIsShown(true)}\n//                 onMouseLeave={() => setIsShown(false)}>\n//                 {isShown && (\n//                     <TaskOverlay />\n//                 )}\n//                 {task}\n//             </TaskBox>\n//         )}\n//         <Button className=\"mb-3\" variant=\"danger\">Delete</Button>\n//     </div>\n// )\n\nvar _c;\n\n$RefreshReg$(_c, \"ListEdit\");","map":{"version":3,"sources":["/home/vnguyen95/ToDoList/client/src/ListEdit.js"],"names":["React","useEffect","useState","axios","Container","Form","Button","Header","styled","ListEdit","props","console","log","listId","match","params","list","setList","tasks","setTasks","DisplayContainer","div","FormContainer","fetchList","data","get","handleAddTasks","e","preventDefault","newTask","target","task","value","handleUpdate","updatedList","title","author","date","count","length","patch","map","index"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport Header from './Header';\nimport styled from 'styled-components';\n\nfunction ListEdit(props) {\n    console.log(props)\n    const listId = props.match.params.listId;\n    const [list, setList] = useState();\n    const [tasks, setTasks] = useState([]);\n\n    const DisplayContainer = styled.div`\n        width: 50%;\n    `;\n\n    const FormContainer = styled.div`\n        width: 50%;\n    `;\n\n    const fetchList = async () => {\n        const { data: list } = await axios.get(`/api/todolist/${listId}`);\n        setList(list);\n        console.log(list);\n    }\n\n    const handleAddTasks = async (e) => {\n        e.preventDefault();\n        console.log(e);\n        const newTask = e.target.task.value;\n        setTasks(...tasks, newTask);\n        console.log(tasks);\n    }\n\n    const handleUpdate = async (e) => {\n        e.preventDefault();\n        console.log(e.target);\n        const updatedList = { title: e.target.title.value, author: e.target.author.value, date: e.target.date.value, tasks: [e.target.task.value], count: tasks.length };\n        console.log(updatedList);\n        await axios.patch(`/api/todolist/${listId}`, updatedList);\n    }\n\n    useEffect(() => {\n        fetchList();\n    }, [])\n\n    return (\n        <Container fluid>\n            <Header />\n            {\n                list && list.author && list.title && list.date && list.tasks &&\n                <>\n                    <div className=\"d-flex justify-content-center text-center mt-3 mb-5\">\n                        <DisplayContainer>\n                            <h2>Old version: </h2>\n                            <div>\n                                <i>{list.author}'s {list.title}</i>\n                            </div>\n\n                            {list.date}\n                            {list.tasks.map((task, index) =>\n                                <div key={index} className=\"m-1\">\n                                    {task}\n                                </div>\n                            )}\n                        </DisplayContainer>\n                    </div>\n\n                    <div className=\"d-flex justify-content-center text-center\">\n                        <FormContainer>\n                            <h2>Update</h2>\n                            <Form onSubmit={handleUpdate} >\n                                <Form.Group controlId=\"title\">\n                                    <Form.Label>List title:</Form.Label>\n                                    <Form.Control type=\"text\" placeholder={list.title} name=\"title\" />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"name\">\n                                    <Form.Label>Name:</Form.Label>\n                                    <Form.Control type=\"text\" placeholder={list.author} name=\"author\" />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"date\">\n                                    <Form.Label>Date:</Form.Label>\n                                    <Form.Control type=\"text\" placeholder={list.date} name=\"date\" />\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label>Task:</Form.Label>\n                                    <Form.Control type=\"text\" placeholder={list.tasks} name=\"task\" />\n                                    {/* <Button className=\"mt-3\" variant=\"secondary\" type=\"submit\">+</Button> */}\n                                </Form.Group>\n\n                                <Button className=\"mt-3\" variant=\"warning\" type=\"submit\">\n                                    Update\n                                </Button>\n                            </Form>\n                        </FormContainer>\n                    </div>\n                </>\n            }\n        </Container >\n    )\n\n}\n\nexport default ListEdit;\n\n\n// return (\n//     <div className=\"pt-2 align-text-center\">\n//         {/* <form>\n//                 {tasks.map((task, index) =>\n//                     <div>\n//                         <input type=\"checkbox\" id=\"task\" name=\"task\" value=\"task\" className=\"task\" key={index}></input>\n//                         <label for=\"task\" className=\"m-1 task\" key={index}>{task.time} —— {task.task}</label>\n//                     </div>\n//                 )}\n//                 <Button variant=\"warning\" type=\"submit\" className=\"m-2\" onDelete={deleteTasks}>Completed!</Button>\n//             </form> */}\n//         {list.list.author}'s {list.list.title} - {list.list.date}\n//         {list.list.tasks.map((task, index) =>\n//             <TaskBox key={index} className=\"m-1\" onClick={() => handleDelete(task._id)}\n//                 onMouseEnter={() => setIsShown(true)}\n//                 onMouseLeave={() => setIsShown(false)}>\n//                 {isShown && (\n//                     <TaskOverlay />\n//                 )}\n//                 {task}\n//             </TaskBox>\n//         )}\n//         <Button className=\"mb-3\" variant=\"danger\">Delete</Button>\n//     </div>\n\n// )"]},"metadata":{},"sourceType":"module"}